// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turksa.DataAccessLayer.Context;

#nullable disable

namespace Turksa.DataAccessLayer.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20230727130253_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Turksa.Entity.Concrete.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirimAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StokId")
                        .HasColumnType("int");

                    b.Property<int?>("UstKategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StokId");

                    b.HasIndex("UstKategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Adet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BirimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StokAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StokKodu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("Stoktipi")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UstUrunId")
                        .HasColumnType("int");

                    b.Property<int?>("VergiOraniId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("StokKodu")
                        .IsUnique();

                    b.HasIndex("UstUrunId");

                    b.HasIndex("VergiOraniId");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.UrunAgaci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UrunAgaclari");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Vergi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Oran")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VergiAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Vergiler");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Kategori", b =>
                {
                    b.HasOne("Turksa.Entity.Concrete.Stok", null)
                        .WithMany("Kategoriler")
                        .HasForeignKey("StokId");

                    b.HasOne("Turksa.Entity.Concrete.Kategori", "UstKategori")
                        .WithMany("AltKategoriler")
                        .HasForeignKey("UstKategoriId");

                    b.Navigation("UstKategori");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Stok", b =>
                {
                    b.HasOne("Turksa.Entity.Concrete.Birim", "Birim")
                        .WithMany()
                        .HasForeignKey("BirimId");

                    b.HasOne("Turksa.Entity.Concrete.Stok", "UstUrun")
                        .WithMany("AltUrunler")
                        .HasForeignKey("UstUrunId");

                    b.HasOne("Turksa.Entity.Concrete.Vergi", "VergiOrani")
                        .WithMany()
                        .HasForeignKey("VergiOraniId");

                    b.Navigation("Birim");

                    b.Navigation("UstUrun");

                    b.Navigation("VergiOrani");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Kategori", b =>
                {
                    b.Navigation("AltKategoriler");
                });

            modelBuilder.Entity("Turksa.Entity.Concrete.Stok", b =>
                {
                    b.Navigation("AltUrunler");

                    b.Navigation("Kategoriler");
                });
#pragma warning restore 612, 618
        }
    }
}
